syntax = "proto3";

package vprotocol;

// ------------------------------------------ information
message Basic {
  int32 id = 1;
  string name = 2;
  bool gender = 3; // true for male, false for female
  int32 age = 4;
  string signature = 5;
}

message Personal {
  int32 id = 1;
  int32 password = 2;
}

message Friend {
  int32 id = 1;
  int32 friendid = 2;
  string remark = 3;
}

message Msg {
  int32 id = 1; // msg id
  int32 sender = 2;
  int32 receiver = 3;
  string msg = 4;
  int32 time = 5;
}

// ----------------------------------------- private protocol
// ----------------------------------------- head
enum PackageType {
  request = 0;
  response = 1;
  notify = 2;
  heartbeat = 3;
}

enum ServiceType {
  sign = 0;
  log = 1;
  synchronous = 2;
  change = 3;
  find = 4;
  manage = 5;
  msg = 6;
}

message Head {
  fixed32 version = 1;
  fixed32 packageType = 2;
  fixed32 servicetype = 3;
  fixed32 bodysize = 4;
};

//------------------------------------------ body
//------------------------------------------ sign
message SignInfo {
  Basic basic = 1; // personal information
  Personal personal = 2; // password
}

message RequestSign {
  oneof info {
    SignInfo signinfo = 1; // sign in
    int32 id = 2; // sign out
  }
}

message ResponseSign {
  int32 id = 2;
}

message NotifySign {
  int32 id = 1; // just only sign out
}

//------------------------------------------ log
message LogInfo {
  int32 id = 1;
  int32 password = 2;
}

message RequestLog {
  oneof info {
    LogInfo loginfo = 1; // log in
    int32 id = 2; // log out
  }
}

enum LogReason {
  repeat = 0;
  wrong = 1; // password wrong
  idnotexist = 2; // id not exist
}

message OfflineInfo {
  repeated Basic friends = 1;
  repeated Msg msgs = 2;
  repeated Basic notifymanage = 3;
  repeated int32 responsemanage = 4;
}

message ResponseLog {
  oneof info {
    LogReason reason = 1;
    OfflineInfo offlineinfo = 2;
  }
}

message NotifyLog {
  bool status = 1;
  int32 id = 2;
}

//------------------------------------------ synchronous
message RequestSynchronous {
  int32 id = 1;
}

message ResponseSynchronous {
  Basic basic = 1;
  Personal personal = 2;
  repeated Friend friends = 3;
  repeated Msg msgs = 4;
}

//------------------------------------------ change
message RequestChange {
  oneof information {
    Basic basic = 1;
    Personal personal = 2;
    Friend friend = 3;
  }
}

message NotifyChange {
  Basic basic = 1;
}

//------------------------------------------ find
message RequestFind {
  oneof info {
    int32 id = 2;
    string name = 3;
  }
}

message ResponseFind {
  repeated Basic basics = 1;
}

//------------------------------------------ manage
message RequestManage {
  int32 initiative = 1;
  bool op = 2;
  int32 id = 3;
  int32 friendid= 4;
}

message NotifyManage {
  int32 initiative = 1;
  bool op = 2;
  Basic basic = 3;
}

//------------------------------------------ message
message RequestMsg {
  Msg msg = 1;
}

message NotifyMsg {
  Msg msg = 1;
}

//------------------------------------------ heartbeat
message HeartBeat {
  bool alive = 1;
}
